version: '3.8'

services:

  etl:
    restart: always
    build: .
    command: >
      sh -c "cd /app/src/
      && python main.py"
    volumes:
      - .:/app
    environment:
      - "MOVIES_DB_NAME=${MOVIES_DB_NAME}"
      - "MOVIES_DB_USER=${MOVIES_DB_USER}"
      - "MOVIES_DB_PASSWORD=${MOVIES_DB_PASSWORD}"
      - "MOVIES_DB_HOST=movies_db"
      - "MOVIES_DB_PORT=5432"
    depends_on:
      - movies_db
      - elastic

  movies_db:
    build:
      context: configuration/postgres
      dockerfile: Dockerfile
    restart: always
    ports:
      - "${MOVIES_DB_PORT}:5432"
    environment:
      - "POSTGRES_USER=${MOVIES_DB_USER}"
      - "POSTGRES_PASSWORD=${MOVIES_DB_PASSWORD}"
      - "POSTGRES_DB=${MOVIES_DB_NAME}"
    volumes:
        - movies_db_volume:/var/lib/postgresql/data/

  elastic:
    image: elasticsearch:8.13.0
    expose:
      - 9200
    environment:
      - "discovery.type=single-node"
      - "xpack.security.enabled=false"
      - "ES_JAVA_OPTS=-Xms1024m -Xmx1024m"

  redis:
    image: redis:7-alpine
    restart: always
    ports:
      - "6380:6379"

volumes:
  movies_db_volume:
