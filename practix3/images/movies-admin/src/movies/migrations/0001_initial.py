# Generated by Django 5.0.3 on 2024-05-01 14:52

import uuid

import django.core.validators
import django.db.models.deletion
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Filmwork',
            fields=[
                ('created', models.DateTimeField(auto_now_add=True, verbose_name='созданный')),
                ('modified', models.DateTimeField(auto_now=True, verbose_name='модифицированный')),
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False, verbose_name='первичный ключ')),
                ('title', models.CharField(max_length=255, verbose_name='название')),
                ('description', models.TextField(blank=True, verbose_name='описание')),
                ('release_date', models.DateField(blank=True, db_index=True, null=True, verbose_name='дата выпуска')),
                ('rating', models.FloatField(blank=True, null=True, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(10)], verbose_name='рейтинг')),
                ('access_type', models.CharField(choices=[('public', 'общественный'), ('subscription', 'подписка')], default='public', max_length=31, verbose_name='тип доступа')),
                ('type', models.CharField(choices=[('movie', 'фильм'), ('tv_show', 'тв шоу')], default='movie', max_length=31, verbose_name='тип кинопроизведения')),
                ('age_rating', models.CharField(choices=[('G', 'G: Основная аудитория'), ('PG', 'PG: Предлагается родительский контроль'), ('PG-13', 'PG-13: Родители предупредили'), ('R', 'R: Ограниченный'), ('NC-17', 'NC-17: Только для взрослых')], default='G', max_length=31, verbose_name='возрастной рейтинг')),
            ],
            options={
                'verbose_name': 'кинопроизведение',
                'verbose_name_plural': 'кинопроизведения',
                'db_table': 'content"."film_work',
            },
        ),
        migrations.CreateModel(
            name='Genre',
            fields=[
                ('created', models.DateTimeField(auto_now_add=True, verbose_name='созданный')),
                ('modified', models.DateTimeField(auto_now=True, verbose_name='модифицированный')),
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False, verbose_name='первичный ключ')),
                ('name', models.CharField(max_length=255, unique=True, verbose_name='название')),
                ('description', models.TextField(blank=True, verbose_name='описание')),
            ],
            options={
                'verbose_name': 'жанр',
                'verbose_name_plural': 'жанры',
                'db_table': 'content"."genre',
            },
        ),
        migrations.CreateModel(
            name='Person',
            fields=[
                ('created', models.DateTimeField(auto_now_add=True, verbose_name='созданный')),
                ('modified', models.DateTimeField(auto_now=True, verbose_name='модифицированный')),
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False, verbose_name='первичный ключ')),
                ('full_name', models.TextField(max_length=255, verbose_name='фио')),
            ],
            options={
                'verbose_name': 'персонал съемочной группы',
                'verbose_name_plural': 'персонал съемочных групп',
                'db_table': 'content"."person',
            },
        ),
        migrations.CreateModel(
            name='GenreFilmwork',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False, verbose_name='первичный ключ')),
                ('created', models.DateTimeField(auto_now_add=True, verbose_name='созданный')),
                ('film_work', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='movies.filmwork', verbose_name='кинопроизведение')),
                ('genre', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='movies.genre', verbose_name='жанр')),
            ],
            options={
                'verbose_name': 'жанр кинопроизведения',
                'verbose_name_plural': 'жанры кинопроизведений',
                'db_table': 'content"."genre_film_work',
                'unique_together': {('film_work', 'genre')},
            },
        ),
        migrations.AddField(
            model_name='filmwork',
            name='genres',
            field=models.ManyToManyField(through='movies.GenreFilmwork', to='movies.genre', verbose_name='связь между кинопроизведениями и жанрами'),
        ),
        migrations.CreateModel(
            name='PersonFilmwork',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False, verbose_name='первичный ключ')),
                ('role', models.TextField(choices=[('actor', 'актёр'), ('director', 'режиссёр'), ('writer', 'сценарист')], default='actor', verbose_name='роль')),
                ('created', models.DateTimeField(auto_now_add=True, verbose_name='созданный')),
                ('film_work', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='movies.filmwork', verbose_name='кинопроизведение')),
                ('person', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='movies.person', verbose_name='персонал')),
            ],
            options={
                'verbose_name': 'персонал съемочной группы кинопроизведения',
                'verbose_name_plural': 'персонал съемочной группы кинопроизведений',
                'db_table': 'content"."person_film_work',
                'index_together': {('film_work', 'person')},
            },
        ),
        migrations.AddField(
            model_name='filmwork',
            name='persons',
            field=models.ManyToManyField(through='movies.PersonFilmwork', to='movies.person', verbose_name='связь между кинопроизведениями и персоналом съемочной группы'),
        ),
    ]
