import os
from telegram import Update
from telegram.ext import  ContextTypes
import speech_recognition as sr
from pydub import AudioSegment

async def handle_voice(update: Update, context: ContextTypes.DEFAULT_TYPE):
    try:
        if not update.message or not update.message.voice:
            return

        voice = update.message.voice
        bot = context.bot
        
        # –ü–æ–ª—É—á–∞–µ–º —Ñ–∞–π–ª
        file = await bot.get_file(voice.file_id)
        
        # –°–æ–∑–¥–∞–µ–º –≤—Ä–µ–º–µ–Ω–Ω—É—é –ø–∞–ø–∫—É
        os.makedirs("temp_voice", exist_ok=True)
        file_id = voice.file_unique_id
        ogg_path = f"temp_voice/{file_id}.ogg"
        wav_path = f"temp_voice/{file_id}.wav"
        
        # –°–∫–∞—á–∏–≤–∞–µ–º –∏ –∫–æ–Ω–≤–µ—Ä—Ç–∏—Ä—É–µ–º
        await file.download_to_drive(ogg_path)
        AudioSegment.from_ogg(ogg_path).export(wav_path, format="wav")
        
        # –†–∞—Å–ø–æ–∑–Ω–∞–µ–º —Ä–µ—á—å
        r = sr.Recognizer()
        with sr.AudioFile(wav_path) as source:
            audio = r.record(source)
            try:
                text = r.recognize_google(audio, language="ru-RU")
                await update.message.reply_text(f"üé§ –†–∞—Å–ø–æ–∑–Ω–∞–Ω–æ: {text}")
            except sr.UnknownValueError:
                await update.message.reply_text("‚ùå –†–µ—á—å –Ω–µ —Ä–∞—Å–ø–æ–∑–Ω–∞–Ω–∞")
            except sr.RequestError as e:
                await update.message.reply_text(f"‚ùå –û—à–∏–±–∫–∞ —Å–µ—Ä–≤–∏—Å–∞: {e}")
        
    except Exception as e:
        await update.message.reply_text(f"‚ö†Ô∏è –ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±—Ä–∞–±–æ—Ç–∫–µ {e}")
        
    finally:
        # –û—á–∏—Å—Ç–∫–∞ –≤—Ä–µ–º–µ–Ω–Ω—ã—Ö —Ñ–∞–π–ª–æ–≤
        for path in [ogg_path, wav_path]:
            try:
                if path and os.path.exists(path):
                    os.remove(path)
            except Exception as e:
                ...
